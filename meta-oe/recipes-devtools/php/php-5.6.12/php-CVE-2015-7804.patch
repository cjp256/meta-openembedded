FIx bug #70433 - Uninitialized pointer in phar_make_dirstream when zip entry filename is "/"

Off-by-one error in the phar_parse_zipfile function in ext/phar/zip.c 
in PHP before 5.5.30 and 5.6.x before 5.6.14 allows remote attackers 
to cause a denial of service (uninitialized pointer dereference and 
application crash) by including the / filename in a .zip PHAR archive.

Written-by: Stanislav Malyshev <stas@php.net>

diff -Nur php-5.6.12.orig/ext/phar/util.c php-5.6.12/ext/phar/util.c
--- php-5.6.12.orig/ext/phar/util.c	2015-12-16 18:51:51.603455462 +0800
+++ php-5.6.12/ext/phar/util.c	2015-12-16 18:53:43.483456242 +0800
@@ -1969,7 +1969,7 @@
 
 	while ((s = zend_memrchr(filename, '/', filename_len))) {
 		filename_len = s - filename;
-		if (FAILURE == zend_hash_add_empty_element(&phar->virtual_dirs, filename, filename_len)) {
+		if (!filename_len || FAILURE == zend_hash_add_empty_element(&phar->virtual_dirs, filename, filename_len)) {
 			break;
 		}
 	}
diff -Nur php-5.6.12.orig/ext/phar/zip.c php-5.6.12/ext/phar/zip.c
--- php-5.6.12.orig/ext/phar/zip.c	2015-12-16 18:51:51.603455462 +0800
+++ php-5.6.12/ext/phar/zip.c	2015-12-16 18:54:39.667456634 +0800
@@ -396,7 +396,9 @@
 
 		if (entry.filename[entry.filename_len - 1] == '/') {
 			entry.is_dir = 1;
-			entry.filename_len--;
+			if(entry.filename_len > 1) {
+				entry.filename_len--;
+			}
 			entry.flags |= PHAR_ENT_PERM_DEF_DIR;
 		} else {
 			entry.is_dir = 0;
